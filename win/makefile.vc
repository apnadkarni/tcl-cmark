#------------------------------------------------------------- -*- makefile -*-
#
# Basic build, test and install
#   nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\tcl
#   nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\tcl install
#
# For other build options (debug, static etc.)
# See TIP 477 (https://core.tcl.tk/tips/doc/trunk/tip/477.md) for
# detailed documentation.
# 
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# The extension needs the cmark-ext libraries. Versions build with
# Visual Studio 2017 are included in the repository and used by default.
# Note older versions of VC++ may or may not work as cmark-gfm uses C99-isms.
# 
# If you do not want to, or cannot, use the included libraries,
# specify the CMARKDIR macro on the command line to point to the
# cmark-gfm directory holding the cmark-gfm installed files (not
# cmark-gfm source) with include and libs directories.
#
# NOTE: to build the cmark-gfm libraries if needed
# Run the nmake.bat batch file in the top level cmark-gfm directory.
#   nmake
#   nmake install
# The build\windows directory within the cmark-gfm directory will contain
# the include and libs. Point CMARKDIR to this.
# Note: then do a nmake clean and rebuild for the other architecture.
#
# DEBUGGING:
# To debug, you need to build both tclcmark as well cmark-gfm libraries
# with symbol information and optimization turned off. The following is
# not ideal but gets the job done for the most part.
# First, build cmark-gfm with the BUILD_TYPE=debug command line macro
#    nmake BUILD_TYPE=debug
#    nmake BUILD_TYPE=debug install
# Then build tclcmark as a *release* build but with optimization off
# and with CMARKDIR pointing to the debug cmark you just built
#    nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\tcl OPTS=pdbs cdebug="-Zi -Od" CMARKDIR=c:\path\to\cmark\build\windows
# This actually lands up with Tcl and tclcmark using the release runtime and
# cmark libraries using the debug runtime leading to potential issues sharing
# memory, file descriptors etc. The "cleaner" way is to built tclcmark
# with the OPTS=symbols,pdbs option which will also link to the debug runtime
# but then you also need to do that with the Tcl build as well.
#------------------------------------------------------------------------------

# The name of the package
PROJECT = tclcmark
PRJ_PACKAGE_TCLNAME = cmark

!include "rules-ext.vc"

!ifndef CMARKDIR
CMARKDIR = cmark-gfm\$(ARCH:IX86=x86)
!endif

# -DCMARK_STATIC_DEFINE required to link to the static lib version of cmark
PRJ_DEFINES = -DCMARK_STATIC_DEFINE -DCMARKEXTENSIONS_STATIC_DEFINE -wd4267 
PRJ_INCLUDES = -I"$(CMARKDIR)\include"
PRJ_OBJS = $(TMP_DIR)\tclcmark.obj
PRJ_LIBS = $(CMARKDIR)\lib\cmark-gfm_static.lib $(CMARKDIR)\lib\cmark-gfmextensions_static.lib 

!include "$(_RULESDIR)\targets.vc"

install: default-install-docs-html
pkgindex: default-pkgindex-tea

